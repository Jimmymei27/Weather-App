{"version":3,"sources":["WeatherDay.jsx","WeatherWeekly.jsx","App.jsx","index.js"],"names":["moment","require","dailyCardStyle","flexGrow","backgroundColor","DayCard","daily","fullData","newDate","Date","weekday","dt","setTime","dailyData","filter","x","dt_txt","includes","slice","dailyTemp","map","main","temp","reduce","a","c","length","dailyAvgHigh","temp_max","dailyAvgLow","temp_min","Card","style","format","toUpperCase","alt","src","weather","icon","color","description","Math","round","display","justifyContent","max","toFixed","min","useStyles","makeStyles","citiesSection","padding","fontSize","cities","width","height","cursor","borderLine","borderRight","WeekContainer","useState","setFullData","setDailyData","zipCode","setZipCode","currentZip","setCurrentZip","undefined","city","setCity","quickCity","setQuickCity","URL","classes","onSubmit","fetch","then","res","json","data","cod","list","response","name","quickSearch","zip","useEffect","marginTop","margin","textAlign","className","onClick","e","preventDefault","target","reset","placeholder","onChange","event","value","border","borderRadius","Grid","WeatherDay","App","WeatherWeekly","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8096837d.chunk.js","sourcesContent":["import React from 'react';\nimport Card from '@material-ui/core/Card'\nconst moment = require('moment');\n\nconst dailyCardStyle = {\n  flexGrow: 1, \n  backgroundColor: '#fafafa',\n};\n\n// Component is used to render each daily forecast\nconst DayCard = ({ daily, fullData }) => {\n\n  // finding the date and time\n  let newDate = new Date();\n  const weekday = daily.dt * 1000\n  newDate.setTime(weekday)\n\n  // parsing data to get Temperature, daily high and low\n  const dailyData = fullData.filter(x => x.dt_txt.includes(daily.dt_txt.slice(0, 10)));\n  const dailyTemp = dailyData.map(x => x.main.temp).reduce((a,c) => a + c)/dailyData.length;\n  const dailyAvgHigh = dailyData.map(x => x.main.temp_max)\n  const dailyAvgLow = dailyData.map(x => x.main.temp_min)\n\n  return (\n      <Card style={dailyCardStyle}>\n        <h2>{moment(newDate).format('MMMM Do, YYYY')}</h2>\n        <h3>{moment(newDate).format('dddd').toUpperCase()}</h3>\n        <img \n        alt=\"Weather Icon\"\n        src={`http://openweathermap.org/img/wn/${daily.weather[0].icon}@2x.png`}\n        />\n        <h4 style={{color: '#f7910b'}}>{daily.weather[0].description.toUpperCase()}</h4>\n        <h2 style={{color: '#f7910b'}}>{Math.round(dailyTemp) + \"°F\"}</h2>\n        <div style={{display:'flex', justifyContent: 'space-evenly'}}>\n          <p>HIGH: {Math.max(...dailyAvgHigh).toFixed(2)}°F</p>\n          <p>LOW: {Math.min(...dailyAvgLow).toFixed(2)}°F</p>\n        </div>\n      </Card>\n  )\n}\n\nexport default DayCard;","\nimport React, {useState, useEffect} from 'react';\nimport WeatherDay from './WeatherDay.jsx';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  citiesSection : {\n    display: 'flex',\n    justifyContent: 'space-evenly',\n    padding: '35px',\n    color: '#f7910b',\n    fontSize: '20px',\n  },\n  cities : {\n    width: '400px',\n    height: '70px',\n      \"&:hover\": {\n      backgroundColor: '#ECECEC',\n      cursor: 'pointer',\n  }\n  },\n  borderLine : {\n    borderRight: '1px solid #ECECEC',\n  }\n});\n\n// This component consists of the header, search bar, quick city searches and container for 5 day cards.\n\nconst WeekContainer = () => {\n  \n  // Entire data set for next five days\n  const [fullData, setFullData] = useState([]);\n  // Data for five days at 6pm\n  const [dailyData, setDailyData] = useState([]);\n  // Hold the state for the zip code to search\n  const [zipCode, setZipCode] = useState('');\n  const [currentZip, setCurrentZip] = useState('')\n  // The city of the zip code\n  const [city, setCity] = useState(undefined);\n  // Use for the useEffect for the quick search\n  const [quickCity, setQuickCity] = useState('');\n  \n  // Key for open weather api and url for data\n  const ApiKey = 'f24086492797537d27e22e610b6a07a3';\n  const URL = `https://api.openweathermap.org/data/2.5/forecast?zip=${zipCode}&units=imperial&APPID=${ApiKey}`;\n\n  const classes = useStyles();\n\n  // api call \n  const onSubmit = () => {\n    fetch(URL)\n    .then(res => res.json())\n    .then(data => {\n      if (data.cod === \"200\") {\n        const dailyData = data.list.filter(response => response.dt_txt.includes(\"18:00:00\"))\n        setFullData(data.list)\n        setDailyData(dailyData)\n        setCity(data.city.name)\n        setCurrentZip(zipCode)\n        setZipCode(\"\")\n      } else {\n        setDailyData(undefined)\n      }\n      setZipCode('')\n    })\n  };\n\n  // clears the input form after submit\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    e.target.reset();\n  };\n\n  // function to trigger quick search city\n  const quickSearch = (zip) => {\n    setZipCode(zip);\n    setQuickCity(zip)\n  };\n\n  // rendering the child component - 5 day forecast\n  const dayCards = () => {\n    return dailyData.map((daily) => <WeatherDay daily={daily} fullData={fullData} key={'index'}/>)\n  }\n\n  // useEffect for quick searches listening to the change on quickCity state\n  useEffect(() => {\n    onSubmit();\n    // eslint-disable-next-line \n  }, [quickCity]);\n \n    return (\n      <div style={{width: '80%', marginTop: '55px', margin: 'auto', textAlign: 'center'}}>\n        <div style={{backgroundColor:'#f7910b'}}>\n          <h1 style={{color: '#ffffff'}}>Weather Displayer</h1>\n        </div>\n        <div className={classes.citiesSection}>\n          <div className={classes.cities} onClick={() => quickSearch(10016)}><p>New York</p></div>\n            <span className={classes.borderLine}></span>\n            <div className={classes.cities} onClick={() => quickSearch(33101)}><p>Miami</p></div>\n            <span className={classes.borderLine}></span>\n            <div className={classes.cities} onClick={() => quickSearch(90001)}><p>Los Angeles</p></div>\n            <span className={classes.borderLine}></span>\n            <div className={classes.cities} onClick={() => quickSearch(60601)}><p>Chicago</p></div>\n            <span className={classes.borderLine}></span>\n            <div className={classes.cities} onClick={() => quickSearch(75206)}><p>Dallas</p></div>\n          </div>\n      <h2 style={{color: '#f7910b'}}>Five Day Forecast</h2>\n      <h2 style={{color: '#f7910b'}}>{city ? city : ''}</h2>\n      <h2 style={{color: '#f7910b'}}>{currentZip}</h2>\n        <div style={{display:'row', justifyContent: 'center'}}>\n          <form onSubmit={handleSubmit}>\n          <input\n            placeholder=\"Enter Zip Code\"\n            onChange={(event) => setZipCode(event.target.value)}\n            style={{fontSize: '20px'}}\n          />\n          <button style={{backgroundColor:'#f7910b', border: '2px solid #f7910b',  color: '#ffffff', fontSize: '20px', borderRadius: '3px'}} onClick={onSubmit}>Check Weather</button>\n            </form>\n         {dailyData ? <Grid style={{display:'flex', justifyContent: 'center', padding: '50px'}}>\n          {dailyData && dayCards()}\n          </Grid> : \n          <h1 style={{color: '#f7910b'}}>ENTER A ZIP CODE!!!</h1> \n         }\n        </div>\n      </div>\n    )\n  \n}\n\nexport default WeekContainer;","import React from 'react';\nimport WeatherWeekly from './WeatherWeekly.jsx';\n\nconst App = () => {\n    return (\n      <div className=\"App\">\n        <WeatherWeekly />\n      </div>\n    );\n  }\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}