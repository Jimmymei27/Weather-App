{"ast":null,"code":"import React from'react';import Card from'@material-ui/core/Card';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var moment=require('moment');var dailyCardStyle={flexGrow:1,backgroundColor:'#fafafa'};// Component is used to render each daily forecast\nvar DayCard=function DayCard(_ref){var daily=_ref.daily,fullData=_ref.fullData;// finding the date and time\nvar newDate=new Date();var weekday=daily.dt*1000;newDate.setTime(weekday);// parsing data to get Temperature, daily high and low\nvar dailyData=fullData.filter(function(x){return x.dt_txt.includes(daily.dt_txt.slice(0,10));});var dailyTemp=dailyData.map(function(x){return x.main.temp;}).reduce(function(a,c){return a+c;})/dailyData.length;var dailyAvgHigh=dailyData.map(function(x){return x.main.temp_max;}).reduce(function(a,c){return a+c;})/dailyData.length;var dailyAvgLow=dailyData.map(function(x){return x.main.temp_min;}).reduce(function(a,c){return a+c;})/dailyData.length;return/*#__PURE__*/_jsxs(Card,{style:dailyCardStyle,children:[/*#__PURE__*/_jsx(\"h2\",{children:moment(newDate).format('MMMM Do, YYYY')}),/*#__PURE__*/_jsx(\"h3\",{children:moment(newDate).format('dddd').toUpperCase()}),/*#__PURE__*/_jsx(\"img\",{alt:\"Weather Icon\",src:\"http://openweathermap.org/img/wn/\".concat(daily.weather[0].icon,\"@2x.png\")}),/*#__PURE__*/_jsx(\"h4\",{style:{color:'#f7910b'},children:daily.weather[0].description.toUpperCase()}),/*#__PURE__*/_jsx(\"h2\",{style:{color:'#f7910b'},children:Math.round(dailyTemp)+\"째F\"}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',justifyContent:'space-evenly'},children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"HIGH: \",dailyAvgHigh.toFixed(2),\"\\xB0F\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"LOW: \",dailyAvgLow.toFixed(2),\"\\xB0F\"]})]})]});};export default DayCard;","map":{"version":3,"sources":["/Users/Fatkidjohnzo/Desktop/Review/Weather-App/src/WeatherDay.jsx"],"names":["React","Card","moment","require","dailyCardStyle","flexGrow","backgroundColor","DayCard","daily","fullData","newDate","Date","weekday","dt","setTime","dailyData","filter","x","dt_txt","includes","slice","dailyTemp","map","main","temp","reduce","a","c","length","dailyAvgHigh","temp_max","dailyAvgLow","temp_min","format","toUpperCase","weather","icon","color","description","Math","round","display","justifyContent","toFixed"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,IAAP,KAAiB,wBAAjB,C,wFACA,GAAMC,CAAAA,MAAM,CAAGC,OAAO,CAAC,QAAD,CAAtB,CAEA,GAAMC,CAAAA,cAAc,CAAG,CACrBC,QAAQ,CAAE,CADW,CAErBC,eAAe,CAAE,SAFI,CAAvB,CAKA;AACA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,MAAyB,IAAtBC,CAAAA,KAAsB,MAAtBA,KAAsB,CAAfC,QAAe,MAAfA,QAAe,CAEvC;AACA,GAAIC,CAAAA,OAAO,CAAG,GAAIC,CAAAA,IAAJ,EAAd,CACA,GAAMC,CAAAA,OAAO,CAAGJ,KAAK,CAACK,EAAN,CAAW,IAA3B,CACAH,OAAO,CAACI,OAAR,CAAgBF,OAAhB,EAEA;AACA,GAAMG,CAAAA,SAAS,CAAGN,QAAQ,CAACO,MAAT,CAAgB,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACC,MAAF,CAASC,QAAT,CAAkBX,KAAK,CAACU,MAAN,CAAaE,KAAb,CAAmB,CAAnB,CAAsB,EAAtB,CAAlB,CAAJ,EAAjB,CAAlB,CACA,GAAMC,CAAAA,SAAS,CAAGN,SAAS,CAACO,GAAV,CAAc,SAAAL,CAAC,QAAIA,CAAAA,CAAC,CAACM,IAAF,CAAOC,IAAX,EAAf,EAAgCC,MAAhC,CAAuC,SAACC,CAAD,CAAGC,CAAH,QAASD,CAAAA,CAAC,CAAGC,CAAb,EAAvC,EAAuDZ,SAAS,CAACa,MAAnF,CACA,GAAMC,CAAAA,YAAY,CAAGd,SAAS,CAACO,GAAV,CAAc,SAAAL,CAAC,QAAIA,CAAAA,CAAC,CAACM,IAAF,CAAOO,QAAX,EAAf,EAAoCL,MAApC,CAA2C,SAACC,CAAD,CAAGC,CAAH,QAASD,CAAAA,CAAC,CAAGC,CAAb,EAA3C,EAA2DZ,SAAS,CAACa,MAA1F,CACA,GAAMG,CAAAA,WAAW,CAAGhB,SAAS,CAACO,GAAV,CAAc,SAAAL,CAAC,QAAIA,CAAAA,CAAC,CAACM,IAAF,CAAOS,QAAX,EAAf,EAAoCP,MAApC,CAA2C,SAACC,CAAD,CAAGC,CAAH,QAASD,CAAAA,CAAC,CAAGC,CAAb,EAA3C,EAA2DZ,SAAS,CAACa,MAAzF,CAEA,mBACI,MAAC,IAAD,EAAM,KAAK,CAAExB,cAAb,wBACE,oBAAKF,MAAM,CAACQ,OAAD,CAAN,CAAgBuB,MAAhB,CAAuB,eAAvB,CAAL,EADF,cAEE,oBAAK/B,MAAM,CAACQ,OAAD,CAAN,CAAgBuB,MAAhB,CAAuB,MAAvB,EAA+BC,WAA/B,EAAL,EAFF,cAGE,YACA,GAAG,CAAC,cADJ,CAEA,GAAG,4CAAsC1B,KAAK,CAAC2B,OAAN,CAAc,CAAd,EAAiBC,IAAvD,WAFH,EAHF,cAOE,WAAI,KAAK,CAAE,CAACC,KAAK,CAAE,SAAR,CAAX,UAAgC7B,KAAK,CAAC2B,OAAN,CAAc,CAAd,EAAiBG,WAAjB,CAA6BJ,WAA7B,EAAhC,EAPF,cAQE,WAAI,KAAK,CAAE,CAACG,KAAK,CAAE,SAAR,CAAX,UAAgCE,IAAI,CAACC,KAAL,CAAWnB,SAAX,EAAwB,IAAxD,EARF,cASE,aAAK,KAAK,CAAE,CAACoB,OAAO,CAAC,MAAT,CAAiBC,cAAc,CAAE,cAAjC,CAAZ,wBACE,8BAAUb,YAAY,CAACc,OAAb,CAAqB,CAArB,CAAV,WADF,cAEE,6BAASZ,WAAW,CAACY,OAAZ,CAAoB,CAApB,CAAT,WAFF,GATF,GADJ,CAgBD,CA7BD,CA+BA,cAAepC,CAAAA,OAAf","sourcesContent":["import React from 'react';\nimport Card from '@material-ui/core/Card'\nconst moment = require('moment');\n\nconst dailyCardStyle = {\n  flexGrow: 1, \n  backgroundColor: '#fafafa',\n};\n\n// Component is used to render each daily forecast\nconst DayCard = ({ daily, fullData }) => {\n\n  // finding the date and time\n  let newDate = new Date();\n  const weekday = daily.dt * 1000\n  newDate.setTime(weekday)\n\n  // parsing data to get Temperature, daily high and low\n  const dailyData = fullData.filter(x => x.dt_txt.includes(daily.dt_txt.slice(0, 10)));\n  const dailyTemp = dailyData.map(x => x.main.temp).reduce((a,c) => a + c)/dailyData.length;\n  const dailyAvgHigh = dailyData.map(x => x.main.temp_max).reduce((a,c) => a + c)/dailyData.length;\n  const dailyAvgLow = dailyData.map(x => x.main.temp_min).reduce((a,c) => a + c)/dailyData.length;\n\n  return (\n      <Card style={dailyCardStyle}>\n        <h2>{moment(newDate).format('MMMM Do, YYYY')}</h2>\n        <h3>{moment(newDate).format('dddd').toUpperCase()}</h3>\n        <img \n        alt=\"Weather Icon\"\n        src={`http://openweathermap.org/img/wn/${daily.weather[0].icon}@2x.png`}\n        />\n        <h4 style={{color: '#f7910b'}}>{daily.weather[0].description.toUpperCase()}</h4>\n        <h2 style={{color: '#f7910b'}}>{Math.round(dailyTemp) + \"째F\"}</h2>\n        <div style={{display:'flex', justifyContent: 'space-evenly'}}>\n          <p>HIGH: {dailyAvgHigh.toFixed(2)}째F</p>\n          <p>LOW: {dailyAvgLow.toFixed(2)}째F</p>\n        </div>\n      </Card>\n  )\n}\n\nexport default DayCard;"]},"metadata":{},"sourceType":"module"}