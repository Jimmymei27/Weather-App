{"ast":null,"code":"var _jsxFileName = \"/Users/Fatkidjohnzo/Desktop/Review/Weather-App/src/WeatherDay.jsx\";\nimport React from 'react';\nimport Card from '@material-ui/core/Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst moment = require('moment');\n\nconst dailyCardStyle = {\n  flexGrow: 1,\n  backgroundColor: '#fafafa'\n}; // Component is used to render each daily forecast\n\nconst DayCard = ({\n  daily,\n  fullData\n}) => {\n  // finding the date and time\n  let newDate = new Date();\n  const weekday = daily.dt * 1000;\n  newDate.setTime(weekday); // parsing data to get Temperature, daily high and low\n\n  const dailyData = fullData.filter(x => x.dt_txt.includes(daily.dt_txt.slice(0, 10)));\n  const dailyTemp = dailyData.map(x => x.main.temp).reduce((a, c) => a + c) / dailyData.length;\n  const dailyAvgHigh = dailyData.map(x => x.main.temp_max);\n  const dailyAvgLow = dailyData.map(x => x.main.temp_min);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    style: dailyCardStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: moment(newDate).format('MMMM Do, YYYY')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: moment(newDate).format('dddd').toUpperCase()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      alt: \"Weather Icon\",\n      src: `http://openweathermap.org/img/wn/${daily.weather[0].icon}@2x.png`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      style: {\n        color: '#f7910b'\n      },\n      children: daily.weather[0].description.toUpperCase()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        color: '#f7910b'\n      },\n      children: Math.round(dailyTemp) + \"째F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-evenly'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"HIGH: \", Math.max(dailyAvgHigh).toFixed(2), \"\\xB0F\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"LOW: \", Math.max(dailyAvgLow).toFixed(2), \"\\xB0F\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 7\n  }, this);\n};\n\n_c = DayCard;\nexport default DayCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"DayCard\");","map":{"version":3,"sources":["/Users/Fatkidjohnzo/Desktop/Review/Weather-App/src/WeatherDay.jsx"],"names":["React","Card","moment","require","dailyCardStyle","flexGrow","backgroundColor","DayCard","daily","fullData","newDate","Date","weekday","dt","setTime","dailyData","filter","x","dt_txt","includes","slice","dailyTemp","map","main","temp","reduce","a","c","length","dailyAvgHigh","temp_max","dailyAvgLow","temp_min","format","toUpperCase","weather","icon","color","description","Math","round","display","justifyContent","max","toFixed"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;;;AACA,MAAMC,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AAEA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,QAAQ,EAAE,CADW;AAErBC,EAAAA,eAAe,EAAE;AAFI,CAAvB,C,CAKA;;AACA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAyB;AAEvC;AACA,MAAIC,OAAO,GAAG,IAAIC,IAAJ,EAAd;AACA,QAAMC,OAAO,GAAGJ,KAAK,CAACK,EAAN,GAAW,IAA3B;AACAH,EAAAA,OAAO,CAACI,OAAR,CAAgBF,OAAhB,EALuC,CAOvC;;AACA,QAAMG,SAAS,GAAGN,QAAQ,CAACO,MAAT,CAAgBC,CAAC,IAAIA,CAAC,CAACC,MAAF,CAASC,QAAT,CAAkBX,KAAK,CAACU,MAAN,CAAaE,KAAb,CAAmB,CAAnB,EAAsB,EAAtB,CAAlB,CAArB,CAAlB;AACA,QAAMC,SAAS,GAAGN,SAAS,CAACO,GAAV,CAAcL,CAAC,IAAIA,CAAC,CAACM,IAAF,CAAOC,IAA1B,EAAgCC,MAAhC,CAAuC,CAACC,CAAD,EAAGC,CAAH,KAASD,CAAC,GAAGC,CAApD,IAAuDZ,SAAS,CAACa,MAAnF;AACA,QAAMC,YAAY,GAAGd,SAAS,CAACO,GAAV,CAAcL,CAAC,IAAIA,CAAC,CAACM,IAAF,CAAOO,QAA1B,CAArB;AACA,QAAMC,WAAW,GAAGhB,SAAS,CAACO,GAAV,CAAcL,CAAC,IAAIA,CAAC,CAACM,IAAF,CAAOS,QAA1B,CAApB;AAEA,sBACI,QAAC,IAAD;AAAM,IAAA,KAAK,EAAE5B,cAAb;AAAA,4BACE;AAAA,gBAAKF,MAAM,CAACQ,OAAD,CAAN,CAAgBuB,MAAhB,CAAuB,eAAvB;AAAL;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAK/B,MAAM,CAACQ,OAAD,CAAN,CAAgBuB,MAAhB,CAAuB,MAAvB,EAA+BC,WAA/B;AAAL;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AACA,MAAA,GAAG,EAAC,cADJ;AAEA,MAAA,GAAG,EAAG,oCAAmC1B,KAAK,CAAC2B,OAAN,CAAc,CAAd,EAAiBC,IAAK;AAF/D;AAAA;AAAA;AAAA;AAAA,YAHF,eAOE;AAAI,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAE;AAAR,OAAX;AAAA,gBAAgC7B,KAAK,CAAC2B,OAAN,CAAc,CAAd,EAAiBG,WAAjB,CAA6BJ,WAA7B;AAAhC;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE;AAAI,MAAA,KAAK,EAAE;AAACG,QAAAA,KAAK,EAAE;AAAR,OAAX;AAAA,gBAAgCE,IAAI,CAACC,KAAL,CAAWnB,SAAX,IAAwB;AAAxD;AAAA;AAAA;AAAA;AAAA,YARF,eASE;AAAK,MAAA,KAAK,EAAE;AAACoB,QAAAA,OAAO,EAAC,MAAT;AAAiBC,QAAAA,cAAc,EAAE;AAAjC,OAAZ;AAAA,8BACE;AAAA,6BAAUH,IAAI,CAACI,GAAL,CAASd,YAAT,EAAuBe,OAAvB,CAA+B,CAA/B,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,4BAASL,IAAI,CAACI,GAAL,CAASZ,WAAT,EAAsBa,OAAtB,CAA8B,CAA9B,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBD,CA7BD;;KAAMrC,O;AA+BN,eAAeA,OAAf","sourcesContent":["import React from 'react';\nimport Card from '@material-ui/core/Card'\nconst moment = require('moment');\n\nconst dailyCardStyle = {\n  flexGrow: 1, \n  backgroundColor: '#fafafa',\n};\n\n// Component is used to render each daily forecast\nconst DayCard = ({ daily, fullData }) => {\n\n  // finding the date and time\n  let newDate = new Date();\n  const weekday = daily.dt * 1000\n  newDate.setTime(weekday)\n\n  // parsing data to get Temperature, daily high and low\n  const dailyData = fullData.filter(x => x.dt_txt.includes(daily.dt_txt.slice(0, 10)));\n  const dailyTemp = dailyData.map(x => x.main.temp).reduce((a,c) => a + c)/dailyData.length;\n  const dailyAvgHigh = dailyData.map(x => x.main.temp_max)\n  const dailyAvgLow = dailyData.map(x => x.main.temp_min)\n\n  return (\n      <Card style={dailyCardStyle}>\n        <h2>{moment(newDate).format('MMMM Do, YYYY')}</h2>\n        <h3>{moment(newDate).format('dddd').toUpperCase()}</h3>\n        <img \n        alt=\"Weather Icon\"\n        src={`http://openweathermap.org/img/wn/${daily.weather[0].icon}@2x.png`}\n        />\n        <h4 style={{color: '#f7910b'}}>{daily.weather[0].description.toUpperCase()}</h4>\n        <h2 style={{color: '#f7910b'}}>{Math.round(dailyTemp) + \"째F\"}</h2>\n        <div style={{display:'flex', justifyContent: 'space-evenly'}}>\n          <p>HIGH: {Math.max(dailyAvgHigh).toFixed(2)}째F</p>\n          <p>LOW: {Math.max(dailyAvgLow).toFixed(2)}째F</p>\n        </div>\n      </Card>\n  )\n}\n\nexport default DayCard;"]},"metadata":{},"sourceType":"module"}