{"ast":null,"code":"var _jsxFileName = \"/Users/Fatkidjohnzo/Desktop/Review/Weather-App/src/WeatherWeekly.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport WeatherDay from './WeatherDay.jsx';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  citiesSection: {\n    display: 'flex',\n    justifyContent: 'space-evenly',\n    padding: '35px',\n    color: '#f7910b',\n    fontSize: '20px'\n  },\n  cities: {\n    width: '400px',\n    height: '70px',\n    \"&:hover\": {\n      backgroundColor: '#ECECEC',\n      cursor: 'pointer'\n    }\n  },\n  borderLine: {\n    borderRight: '1px solid #ECECEC'\n  }\n}); // This component consists of the header, search bar, quick city searches and container for 5 day cards.\n\nconst WeekContainer = () => {\n  _s();\n\n  // Entire data set for next five days\n  const [fullData, setFullData] = useState([]); // Data for five days at 6pm\n\n  const [dailyData, setDailyData] = useState([]); // Hold the state for the zip code to search\n\n  const [zipCode, setZipCode] = useState('');\n  const [currentZip, setCurrentZip] = useState(''); // The city of the zip code\n\n  const [city, setCity] = useState(undefined); // Use for the useEffect for the quick search\n\n  const [quickCity, setQuickCity] = useState(''); // Key for open weather api and url for data\n\n  const ApiKey = 'f24086492797537d27e22e610b6a07a3';\n  const URL = `http://api.openweathermap.org/data/2.5/forecast?zip=${zipCode}&units=imperial&APPID=${ApiKey}`;\n  const classes = useStyles(); // api call \n\n  const onSubmit = () => {\n    fetch(URL).then(res => res.json()).then(data => {\n      if (data.cod === \"200\") {\n        const dailyData = data.list.filter(response => response.dt_txt.includes(\"18:00:00\"));\n        setFullData(data.list);\n        setDailyData(dailyData);\n        setCity(data.city.name);\n        setCurrentZip(zipCode);\n        setZipCode(\"\");\n      } else {\n        setDailyData(undefined);\n      }\n\n      setZipCode('');\n    });\n  }; // clears the input form after submit\n\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    e.target.reset();\n  }; // function to trigger quick search city\n\n\n  const quickSearch = zip => {\n    setZipCode(zip);\n    setQuickCity(zip);\n  }; // rendering the child component - 5 day forecast\n\n\n  const dayCards = () => {\n    return dailyData.map(daily => /*#__PURE__*/_jsxDEV(WeatherDay, {\n      daily: daily,\n      fullData: fullData\n    }, 'index', false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 37\n    }, this));\n  }; // useEffect for quick searches listening to the change on quickCity state\n\n\n  useEffect(() => {\n    onSubmit(); // eslint-disable-next-line \n  }, [quickCity]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '80%',\n      marginTop: '55px',\n      margin: 'auto',\n      textAlign: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: '#f7910b'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          color: '#ffffff'\n        },\n        children: \"Weather Displayer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.citiesSection,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.cities,\n        onClick: () => quickSearch(10016),\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"New York\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 78\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: classes.borderLine\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.cities,\n        onClick: () => quickSearch(33101),\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Miami\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 80\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: classes.borderLine\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.cities,\n        onClick: () => quickSearch(90001),\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Los Angeles\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 80\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: classes.borderLine\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.cities,\n        onClick: () => quickSearch(60601),\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Chicago\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 80\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: classes.borderLine\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.cities,\n        onClick: () => quickSearch(75206),\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Dallas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 80\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        color: '#f7910b'\n      },\n      children: \"Five Day Forecast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        color: '#f7910b'\n      },\n      children: city ? city : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        color: '#f7910b'\n      },\n      children: currentZip\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'row',\n        justifyContent: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Enter Zip Code\",\n          onChange: event => setZipCode(event.target.value),\n          style: {\n            fontSize: '20px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            backgroundColor: '#f7910b',\n            border: '2px solid #f7910b',\n            color: '#ffffff',\n            fontSize: '20px',\n            borderRadius: '3px'\n          },\n          onClick: onSubmit,\n          children: \"Check Weather\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this), dailyData ? /*#__PURE__*/_jsxDEV(Grid, {\n        style: {\n          display: 'flex',\n          justifyContent: 'center',\n          padding: '50px'\n        },\n        children: dailyData && dayCards()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 23\n      }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          color: '#f7910b'\n        },\n        children: \"ENTER A ZIP CODE!!!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 7\n  }, this);\n};\n\n_s(WeekContainer, \"4vAIv3vwugZe6VCITlRe1ZdDOrw=\", false, function () {\n  return [useStyles];\n});\n\n_c = WeekContainer;\nexport default WeekContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeekContainer\");","map":{"version":3,"sources":["/Users/Fatkidjohnzo/Desktop/Review/Weather-App/src/WeatherWeekly.jsx"],"names":["React","useState","useEffect","WeatherDay","Grid","makeStyles","useStyles","citiesSection","display","justifyContent","padding","color","fontSize","cities","width","height","backgroundColor","cursor","borderLine","borderRight","WeekContainer","fullData","setFullData","dailyData","setDailyData","zipCode","setZipCode","currentZip","setCurrentZip","city","setCity","undefined","quickCity","setQuickCity","ApiKey","URL","classes","onSubmit","fetch","then","res","json","data","cod","list","filter","response","dt_txt","includes","name","handleSubmit","e","preventDefault","target","reset","quickSearch","zip","dayCards","map","daily","marginTop","margin","textAlign","event","value","border","borderRadius"],"mappings":"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","sourcesContent":["\nimport React, {useState, useEffect} from 'react';\nimport WeatherDay from './WeatherDay.jsx';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  citiesSection : {\n    display: 'flex',\n    justifyContent: 'space-evenly',\n    padding: '35px',\n    color: '#f7910b',\n    fontSize: '20px',\n  },\n  cities : {\n    width: '400px',\n    height: '70px',\n      \"&:hover\": {\n      backgroundColor: '#ECECEC',\n      cursor: 'pointer',\n  }\n  },\n  borderLine : {\n    borderRight: '1px solid #ECECEC',\n  }\n});\n\n// This component consists of the header, search bar, quick city searches and container for 5 day cards.\n\nconst WeekContainer = () => {\n  \n  // Entire data set for next five days\n  const [fullData, setFullData] = useState([]);\n  // Data for five days at 6pm\n  const [dailyData, setDailyData] = useState([]);\n  // Hold the state for the zip code to search\n  const [zipCode, setZipCode] = useState('');\n  const [currentZip, setCurrentZip] = useState('')\n  // The city of the zip code\n  const [city, setCity] = useState(undefined);\n  // Use for the useEffect for the quick search\n  const [quickCity, setQuickCity] = useState('');\n  \n  // Key for open weather api and url for data\n  const ApiKey = 'f24086492797537d27e22e610b6a07a3';\n  const URL = `http://api.openweathermap.org/data/2.5/forecast?zip=${zipCode}&units=imperial&APPID=${ApiKey}`;\n\n  const classes = useStyles();\n\n  // api call \n  const onSubmit = () => {\n    fetch(URL)\n    .then(res => res.json())\n    .then(data => {\n      if (data.cod === \"200\") {\n        const dailyData = data.list.filter(response => response.dt_txt.includes(\"18:00:00\"))\n        setFullData(data.list)\n        setDailyData(dailyData)\n        setCity(data.city.name)\n        setCurrentZip(zipCode)\n        setZipCode(\"\")\n      } else {\n        setDailyData(undefined)\n      }\n      setZipCode('')\n    })\n  };\n\n  // clears the input form after submit\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    e.target.reset();\n  };\n\n  // function to trigger quick search city\n  const quickSearch = (zip) => {\n    setZipCode(zip);\n    setQuickCity(zip)\n  };\n\n  // rendering the child component - 5 day forecast\n  const dayCards = () => {\n    return dailyData.map((daily) => <WeatherDay daily={daily} fullData={fullData} key={'index'}/>)\n  }\n\n  // useEffect for quick searches listening to the change on quickCity state\n  useEffect(() => {\n    onSubmit();\n    // eslint-disable-next-line \n  }, [quickCity]);\n \n    return (\n      <div style={{width: '80%', marginTop: '55px', margin: 'auto', textAlign: 'center'}}>\n        <div style={{backgroundColor:'#f7910b'}}>\n          <h1 style={{color: '#ffffff'}}>Weather Displayer</h1>\n        </div>\n        <div className={classes.citiesSection}>\n          <div className={classes.cities} onClick={() => quickSearch(10016)}><p>New York</p></div>\n            <span className={classes.borderLine}></span>\n            <div className={classes.cities} onClick={() => quickSearch(33101)}><p>Miami</p></div>\n            <span className={classes.borderLine}></span>\n            <div className={classes.cities} onClick={() => quickSearch(90001)}><p>Los Angeles</p></div>\n            <span className={classes.borderLine}></span>\n            <div className={classes.cities} onClick={() => quickSearch(60601)}><p>Chicago</p></div>\n            <span className={classes.borderLine}></span>\n            <div className={classes.cities} onClick={() => quickSearch(75206)}><p>Dallas</p></div>\n          </div>\n      <h2 style={{color: '#f7910b'}}>Five Day Forecast</h2>\n      <h2 style={{color: '#f7910b'}}>{city ? city : ''}</h2>\n      <h2 style={{color: '#f7910b'}}>{currentZip}</h2>\n        <div style={{display:'row', justifyContent: 'center'}}>\n          <form onSubmit={handleSubmit}>\n          <input\n            placeholder=\"Enter Zip Code\"\n            onChange={(event) => setZipCode(event.target.value)}\n            style={{fontSize: '20px'}}\n          />\n          <button style={{backgroundColor:'#f7910b', border: '2px solid #f7910b',  color: '#ffffff', fontSize: '20px', borderRadius: '3px'}} onClick={onSubmit}>Check Weather</button>\n            </form>\n         {dailyData ? <Grid style={{display:'flex', justifyContent: 'center', padding: '50px'}}>\n          {dailyData && dayCards()}\n          </Grid> : \n          <h1 style={{color: '#f7910b'}}>ENTER A ZIP CODE!!!</h1> \n         }\n        </div>\n      </div>\n    )\n  \n}\n\nexport default WeekContainer;"]},"metadata":{},"sourceType":"module"}